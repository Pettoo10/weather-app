name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for PostgreSQL to be ready
        run: |
          until docker exec $(docker ps -q -f "name=postgres") pg_isready -U ${{ secrets.POSTGRES_USER }} -d ${{ secrets.POSTGRES_DB }}; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done
          echo "PostgreSQL is ready!"

      - name: Run Tests
        run: |
          TESTING=true DATABASE_URL=postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@postgres:5432/${{ secrets.POSTGRES_DB }} python manage.py test
        env:
          DATABASE_NAME: ${{ secrets.POSTGRES_DB }}
          DATABASE_USER: ${{ secrets.POSTGRES_USER }}
          DATABASE_PASS: ${{ secrets.POSTGRES_PASSWORD }}
          DATABASE_HOST: postgres
          DATABASE_PORT: 5432


  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        IMAGE_TAG=$(echo "${GITHUB_SHA::7}")
        docker build -t weather-app:${IMAGE_TAG} .

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Push Docker image to Docker Hub
      run: |
        IMAGE_TAG=$(echo "${GITHUB_SHA::7}")
        docker tag weather-app:${IMAGE_TAG} ${{ secrets.DOCKER_HUB_USERNAME }}/weather-app:${IMAGE_TAG}
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/weather-app:${IMAGE_TAG}

    - name: SSH to EC2 and run Docker container
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.EC2_INSTANCE_IP }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          IMAGE_TAG=$(echo "${{ github.sha }}")
          IMAGE_TAG=${IMAGE_TAG:0:7}
          echo "Using image tag: ${IMAGE_TAG}"
          cd /app/weather-app
          docker-compose down
          docker-compose pull
          docker-compose up -d
